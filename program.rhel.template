#!/bin/bash
#@author Brunino Criniti
#chkconfig: 2345 95 05  (1)
#Install:
# source function library
. /etc/rc.d/init.d/functions
prog=programname
USER=user_program_owner
BIN=/folder/programname 
PIDFILE=/var/run/programname.pid
LOCKFILE=/var/lock/subsys/programname
LOGFILE=/var/log/programname.log
#get the process id
get_pid() {
cat "$PIDFILE"
}
#check is the program is running
is_running() {
    [ -f "$PIDFILE" ] && ps `get_pid` > /dev/null 2>&1
}

start() {

#example export all u need 
export  PATH="/ltm/rt/java/jdk1.8.0_65/bin":$PATH

echo -n $"Starting $prog"
if [ -e $LOCKFILE ]; then
if [ -e $PIDFILE ] && [ -e /proc/`cat $PIDFILE` ]; then
echo -n $"cannot start $prog: $prog is already running."
failure $"cannot start $prog: $prog is already running."
echo
return 1
fi
fi

local CMD="$BIN  -command options  &> \"$LOGFILE\" & echo \$!"
su -c "$CMD" $USER > "$PIDFILE" && success || failure
RETVAL=$?
echo
[ $RETVAL -eq 0 ] && touch $LOCKFILE
return $RETVAL
}
stop() {
echo -n $"Stopping $prog:"
if [ ! -e $LOCKFILE ]; then
echo -n $"cannot stop $prog: $prog is not running."
failure $"cannot stop $prog: $prog is not running."
echo
return 1
fi
pid=`get_pid`
#get the group process id
kill $pid
for i in {1..120}
do
  if ! is_running; then
   break
   fi
   echo -n "."
  sleep 1
done
echo

# ------ end optional section to ensure process is killed ------
# Check to see whether the process is still running
[ `pidofproc -p $PIDFILE` ] && failure || success
RETVAL=$?
echo
[ $RETVAL -eq 0 ] && rm -f $LOCKFILE $PIDFILE
return $RETVAL
}
case "$1" in
start)
start
;;
stop)
stop
;;
restart)
stop
start
;;
status)
status -p $PIDFILE $prog
;;
*)
echo $"Usage: $0 {start|stop|status|restart}"
esac
